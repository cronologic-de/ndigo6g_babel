name: Build All Projects
#
# Every build job:
# - Is responsible for building one project, and committing the output 
#   to the repository.
# - Needs a relevant `Check-xyz` job to check if pushed files are concerned 
#   files or NOT, if NOT then every step in the job will be bypassed.
# - Needs the previous (orderd as written in the file here) build job to 
#   guarantee a sequential run, mainly when committing updates to respository.
#   Reason: since every job commits to the repository, if these jobs run concurrently
#   then commit fails, even if there is no "technical" dependnecy between them.
#   One drawback that if a build job fails, next jobs won't run. 
#   Another one is the longer time taken.
# - Should pull output of the previous job(s), to avoid error: 
#   `tip of your current branch is behind its remote counterpart`

on: # workflow_dispatch
  push:
    paths: # Collected from paths of all jobs below
    - 'lib/**'
    - 'include/**'
    - 'ug_example/**'
    - '.github/workflows/**'

env:
  BUILD_TYPE: Release
  COMMIT_MSG: 'Internal build due to code change' 
  CRONO_BIN_PATH: ./bin/
  BUILD_PATH: '../build/bfR'

jobs:
  # ===========================================================================
  #
  # Upon any change in sub files of ./include, ./lib, ./ug_example, the action 
  # builds the user guide example.
  #
  Check-Build-UG_EX:
    runs-on: ubuntu-latest
    # Map a step output to a job output
    outputs:
      ok_to_proceed: ${{ steps.check.outputs.ok_to_proceed_val }}
      
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
      
    - name: Get changed files in concerned folder(s)
      id: changed-files-specific
      uses: tj-actions/changed-files@v42
      with:
        files: |
          include/**
          lib/**
          ug_example/**
          .github/workflows/**
          
    # Check if any file(s) in the concerned folder changed
    - name: Check
      id: check
      if: steps.changed-files-specific.outputs.any_changed == 'false'
      run: |
        echo "No concerned files changed, suppressing processing."       
        echo "ok_to_proceed_val=N" >> $GITHUB_OUTPUT

  # ___________________________________________________________________________
  #
  UG_EX-Linux-Build:
      needs: Check-Build-UG_EX
      runs-on: ubuntu-latest

      env: 
        TOOLS_SUB_DIR: 'ug_example/tools'
        CRONO_EXE_NAME: ndigo6g12_ugex

      steps:
      - name: echo Suppress Status if Needed
        if: ${{needs.Check-Build-UG_EX.outputs.ok_to_proceed == 'N' }}
        run: |
          echo "Job execution processing is suppressed for no cencerned files are changed."
          
      - name: Checkout Code
        if: ${{needs.Check-Build-UG_EX.outputs.ok_to_proceed != 'N' }}
        uses: actions/checkout@v4
      
      - name: Pull latest changes
        if: ${{needs.Check-Build-UG_EX.outputs.ok_to_proceed != 'N' }}
        run: |
          git pull --rebase
  
      - name: Configure CMake and Build
        if: ${{needs.Check-Build-UG_EX.outputs.ok_to_proceed != 'N' }}
        run: |
          cd ${{env.TOOLS_SUB_DIR}}
          cmake -B ${{env.BUILD_PATH}} -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
          cmake --build ${{env.BUILD_PATH}}
          
      - name: Commit Executable
        if: ${{needs.Check-Build-UG_EX.outputs.ok_to_proceed != 'N' }}
        uses: EndBug/add-and-commit@v9
        with:
            author_name: Internal Workflow Action
            message: ${{env.COMMIT_MSG}}
            add: ${{env.CRONO_BIN_PATH}}${{env.CRONO_EXE_NAME}} --force

  # ___________________________________________________________________________
  #
  UG_EX-Win-Build:
      needs:
       - Check-Build-UG_EX
       - UG_EX-Linux-Build  # Guarnatee Sequential Build

      runs-on: windows-latest

      env: 
        TOOLS_SUB_DIR: 'ug_example/tools'
        CRONO_EXE_NAME: ndigo6g12_ugex.exe

      defaults:
        run:
          shell: cmd
          
      steps:
      - name: echo Suppress Status if Needed
        if: ${{needs.Check-Build-UG_EX.outputs.ok_to_proceed == 'N' }}
        run: |
          echo "Job execution processing is suppressed for no cencerned files are changed."
          
      - name: Checkout Code
        if: ${{needs.Check-Build-UG_EX.outputs.ok_to_proceed != 'N' }}
        uses: actions/checkout@v4
      
      - name: Pull Latest 
        if: ${{needs.Check-Build-UG_EX.outputs.ok_to_proceed != 'N' }}
        run: |
          git pull --rebase
          
      - name: Configure CMake and Build
        if: ${{needs.Check-Build-UG_EX.outputs.ok_to_proceed != 'N' }}
        run: |
          cd ${{env.TOOLS_SUB_DIR}}
          cmake -B ${{env.BUILD_PATH}}
          cmake --build ${{env.BUILD_PATH}} --config ${{env.BUILD_TYPE}}
          
      - name: Commit Executable
        if: ${{needs.Check-Build-UG_EX.outputs.ok_to_proceed != 'N' }}
        uses: EndBug/add-and-commit@v9
        with:
            author_name: Internal Workflow Action
            message: ${{env.COMMIT_MSG}}
            add: ${{env.CRONO_BIN_PATH}}${{env.CRONO_EXE_NAME}} --force

